{
  "name": "Taray Running Coach",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        0,
        192
      ],
      "id": "88e476aa-d0e2-421b-8a2f-be39ee65dcf5",
      "name": "Telegram Trigger",
      "webhookId": "426ce44a-c996-430f-b1b0-f6145cba602d",
      "credentials": {
        "telegramApi": {
          "id": "Je3LIdG8UoMjYztD",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "d9437036-7ca7-41ef-aba7-e4fa3b921f15"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e3ff5f70-d6e0-4cac-a92e-80740d0091b4",
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "27e58b55-5617-4342-9c52-0d26d8757e17",
                    "leftValue": "={{ $json.message.photo[3].file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        224,
        176
      ],
      "id": "1c22e87b-3bd4-41d5-b04e-e5eed1bf2f20",
      "name": "Switch"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=## Role  \nYou are **Taray Coach**, a professional virtual running coach chatbot.  \nYou help users improve their running and health through:\n- Personalized training plans  \n- Practical nutrition advice  \n- Gear recommendations  \n- Weekly training guidance  \n\nYou adapt your advice to each user's background, fitness level, and goals.\n\n---\n\n## Behavior\n\n- Greet first-time users with a short, friendly intro:  \n  *\"Hi! I'm Taray Coach ‚Äî your virtual running guide. I can help you with training plans, nutrition tips, and gear suggestions. What‚Äôs your current goal?\"*\n\n- Use a **professional, friendly tone**  \n- Keep responses **concise and helpful**  \n- Use **light emojis** in responses (e.g., ‚úÖ, üèÉ, üíß) when they aid readability  \n- Only ask follow-up questions when necessary for personalization\n\n---\n\n## External Validation\n\nYou have access to two tools to **validate or enhance** your information:\n- **Wikipedia API** ‚Üí Use for structured factual references (e.g., race distances, physiology)  \n- **SERP API** ‚Üí Use for up-to-date or contextual advice (e.g., new training methods, health guidelines)\n\nUse these to **cross-check** advice or back up key recommendations when needed.  \nIf uncertain, say: *‚ÄúLet me double-check that for you‚Ä¶‚Äù* and use an API before replying.\n\n---\n\n## Memory (Zep Integration)\n\nStore and retrieve:\n- Name and age  \n- Experience level  \n- Running goal (e.g., 10K, weight loss, general fitness)  \n- Weekly availability  \n- Diet type or restrictions  \n- Injuries or physical limitations  \n- Gear preferences  \n\nAsk follow-up questions only if memory is missing or unclear. Update memory with every new detail provided.\n\n---\n\n## Capabilities\n\n### TrainingPlan_Generator  \n- Generate short, beginner-friendly plans in bullet format  \n- Tailor based on:\n  - User‚Äôs goal  \n  - Training experience  \n  - Weekly availability  \n- Keep plans simple and encourage consistency\n\n### Nutrition_Assistant  \n- Give practical post-run or day-to-day meal tips  \n- Limit to 2‚Äì3 useful recommendations  \n- Adjust for diet type when known  \n- Cross-check with Wikipedia or SERP if referencing dietary science\n\n### Gear_Recommender  \n- Recommend basic shoes or gear based on terrain and preferences  \n- Ask brief follow-up questions if needed (e.g., ‚ÄúDo you run on trails or roads?‚Äù)  \n- Validate claims or new gear types via SERP if relevant\n\n### Schedule_Set  \n- Suggest a weekly rhythm like:\n  - 2 short runs  \n  - 1 long run  \n  - 2 rest or recovery days  \n  - 1 cross-training day (optional)  \n- Keep output bullet-based and short\n\n---\n\n## Tools\n\n### Wikipedia API  \n- Use to confirm facts like:  \n  - Distances of races  \n  - Nutrient functions  \n  - Training terminology  \n\n### SERP API  \n- Use for:\n  - Current best practices in running or recovery  \n  - Gear reviews or comparisons  \n  - Up-to-date articles on fitness or diet\n\nUse APIs only when accuracy or freshness of information is important.  \nBe transparent with the user when you‚Äôve validated using them."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        1440,
        192
      ],
      "id": "16f864ff-8159-40b0-a4ef-0be1721c24d1",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1344,
        416
      ],
      "id": "4e5a30c1-c306-4b46-a009-3bbbe90d0a19",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "8Lq827CER3ZvjmCH",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "11914d34-6e38-4a96-93a7-820eb1ad63df",
              "name": "text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        784,
        16
      ],
      "id": "9d904139-8c1a-49ec-a09c-726d698fb201",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        656,
        192
      ],
      "id": "5b675e96-a7a5-48ed-9eda-1e3a482ca0f9",
      "name": "Get a file",
      "webhookId": "860e1784-7a8b-4bf3-aaa3-58c3a4b97355",
      "credentials": {
        "telegramApi": {
          "id": "Je3LIdG8UoMjYztD",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        912,
        192
      ],
      "id": "7778a48f-9e60-4692-9254-8a017f9e38ca",
      "name": "Transcribe a recording",
      "credentials": {
        "openAiApi": {
          "id": "8Lq827CER3ZvjmCH",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1936,
        192
      ],
      "id": "0184d2f7-bca4-46c1-8cd6-2932e33c95e6",
      "name": "Send a text message",
      "webhookId": "7880d0f1-3623-4a63-9208-ad354c4197dc",
      "credentials": {
        "telegramApi": {
          "id": "Je3LIdG8UoMjYztD",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryZep",
      "typeVersion": 1.3,
      "position": [
        1472,
        416
      ],
      "id": "527cc9a9-c864-4d27-bd06-5097111f12fc",
      "name": "Zep",
      "credentials": {
        "zepApi": {
          "id": "ktgzX7Sr2BaLABEY",
          "name": "Zep Api account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.photo[3].file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        448,
        384
      ],
      "id": "f3bd95d9-3802-4bdf-80cc-d8d48180f6fc",
      "name": "Get a file1",
      "webhookId": "955bb0ad-e592-4694-9b28-ddfda999d99c",
      "credentials": {
        "telegramApi": {
          "id": "Je3LIdG8UoMjYztD",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const newMimeType = 'image/jpg'; // set your desired MIME type\n\nitems.forEach(item => {\n  if (item.binary && item.binary.data) {\n    // Only change the MIME type, keeping everything else untouched.\n    item.binary.data.mimeType = newMimeType;\n  }\n});\n\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        672,
        384
      ],
      "id": "deb14a11-3d34-4062-a1b7-651bafd0d2c7",
      "name": "Code"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "inputType": "base64",
        "simplify": false,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        896,
        384
      ],
      "id": "6ceae4d0-9321-40c8-8ff6-bbc53dcd6185",
      "name": "Analyze image",
      "credentials": {
        "openAiApi": {
          "id": "8Lq827CER3ZvjmCH",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7eea395-f1ac-4fea-9b96-67d1c1fb1c35",
              "name": "text",
              "value": "={{ $json.choices[0].message.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1120,
        384
      ],
      "id": "d6f172bc-0046-4583-8e89-97aa964cf95a",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "typeVersion": 1,
      "position": [
        1600,
        416
      ],
      "id": "d0c6fe21-66f5-40a8-8a6f-6df9b34e5825",
      "name": "SerpAPI",
      "credentials": {
        "serpApi": {
          "id": "kkj5oGlrq2yi6ocW",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolWikipedia",
      "typeVersion": 1,
      "position": [
        1728,
        416
      ],
      "id": "29965b46-486c-46ad-8eb5-c54f90f72065",
      "name": "Wikipedia"
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get a file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get a file1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a file": {
      "main": [
        [
          {
            "node": "Transcribe a recording",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe a recording": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Zep": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Get a file1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Analyze image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze image": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SerpAPI": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Wikipedia": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "3bfa2396-2ed8-405e-91cf-3cab7a01e017",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "4d2899c4aafb5acbb6afa29a6e312bf5d549bd6f1cba989e1a802b6ceee06221"
  },
  "id": "W777mQr1xWkzXjEz",
  "tags": []
}